(((elisp org-element--headline-cache) . #s(avl-tree- [[[nil nil #7=(headline (:raw-value #1="Unity of Knowledge and Action" :begin 66 :end 99 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 66 :title #1# :mode nil :granularity element :cached t :parent #5=(org-data (:begin 1 :contents-begin 1 :contents-end 664 :end 666 :robust-begin 3 :robust-end 662 :post-blank 1 :post-affiliated 1 :path "c:/Users/DELL/Desktop/hello-world.org" :mode org-data :CATEGORY "hello-world" :cached t :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #8=(headline (:raw-value #2="zynq7020 create and familiar with code [0/2]" :begin 123 :end 250 :pre-blank 0 :contents-begin 177 :contents-end 250 :robust-begin 179 :robust-end 248 :level 2 :priority nil :tags nil :todo-keyword #("DOING" 0 5 (face ((:inherit org-todo :foreground "yellow") org-level-2) org-todo-head "TODO" fontified t)) :todo-type todo :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 123 :title #2# :mode section :granularity element :cached t :parent #6=(headline #3=(:raw-value "<2024-05-30 周四> [0/2]" :begin 99 :end 412 :pre-blank 0 :contents-begin 123 :contents-end 408 :robust-begin 125 :robust-end 406 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 99 :title ((timestamp (:type active :raw-value "<2024-05-30 周四>" :year-start 2024 :month-start 5 :day-start 30 :hour-start nil :minute-start nil :year-end 2024 :month-end 5 :day-end 30 :hour-end nil :minute-end nil :begin 101 :end 117 :post-blank 1 :parent #4=(headline #3#))) (statistics-cookie (:begin 117 :end 122 :value "[0/2]" :post-blank 0 :parent #4#))) :parent #5# :cached t :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #6# 0] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[nil nil #5# 0] [nil nil #7# 0] (section (:begin 1 :end 66 :contents-begin 1 :contents-end 65 :robust-begin 1 :robust-end 63 :post-blank 1 :post-affiliated 1 :mode first-section :granularity element :cached t :parent #5# :org-element--cache-sync-key nil)) 0] [nil nil #8# 0] #6# -1] nil nil 0] org-element--cache-compare)))